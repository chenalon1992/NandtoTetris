// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
	static Array addr, newLine,backSp;
    /** Initializes the keyboard. */
    function void init() 
	{
		let addr = 24576;
		let newLine = 128;
		let backSp = 129;
		return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		return Memory.peek(addr);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
	        var char result, curChar;
			let curChar = 0;
			while (curChar = 0) {
				let curChar = Keyboard.keyPressed();
			}
			let result = curChar;
			while (~(curChar = 0)) {
				let curChar = Keyboard.keyPressed();        
			}
			if (~(result = backSp)) {
				do Output.printChar(result);        
			}
			return result;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
	    var String myString;
        var char curChar;
        let myString = String.new(50);
        do Output.printString(message);
        while (true) {
            let curChar = Keyboard.readChar();
            if (curChar = newLine) {
                return myString;
            }
            if (curChar = backSp) {
                do Output.backSpace();
                do myString.eraseLastChar();
            }
            else {
                do myString.appendChar(curChar);
            }
        }
        return myString;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
		var String myString;
		let myString = Keyboard.readLine(message);
		return myString.intValue();
    }
}
